# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - feature/github-actions

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'  # Use Node.js version 18.x
      - name: Install dependencies
        working-directory: frontend
        run: npm install --legacy-peer-deps
      - name: Build Angular project
        working-directory: frontend
        run: |
          npm install --force --legacy-peer-deps @angular/compiler@latest
          npm run build -- --configuration=production --output-path=../_site --base-href=frontend/docs
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: github-pages
          path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: github-pages
          path: _site
      - name: Wait for artifact metadata
        run: sleep 120  # Adjust the delay time as needed    
      - name: Deploy to GitHub Pages
        if: success()
        uses: actions/deploy-pages@v4
